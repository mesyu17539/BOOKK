<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookk.web.mapper.Mapper">
    <resultMap type="java.util.HashMap" id="map">
    <!-- 관리자 -->
		<result property="admId" column="adm_id"/>
		<result property="admPass" column="adm_pass"/>
    <!-- 회원 -->
		<result property="memID" column="mem_id"/>
		<result property="memPass" column="mem_pass"/>
		<result property="memStatus" column="memstatus"/>
		<result property="memName" column="mem_name"/>
		<result property="memNickName" column="mem_nickname"/>
		<result property="memIntroduce" column="mem_introduce"/>
		<result property="memSsn" column="mem_ssn"/>
		<result property="memPhone" column="mem_phone"/>
		<result property="memEmail" column="mem_email"/>
		<result property="memAddr" column="mem_address"/>
	<!-- 주소 -->
		<result property="addrAddress" column="addr_address"/>
		<result property="addrPostCode" column="addr_postcodeaddress"/>
		<result property="addrRoad" column="addr_roadaddress"/>
		<result property="addrJibun" column="addr_jibunaddress"/>
		<result property="addrDetailAddr" column="addr_detailaddress"/>	
		<result property="admId" column="ADM_ID"/>
		<result property="admPass" column="ADM_PASS"/>
	<!-- 게시판 -->
		<result property="bID" column="board_id"/>
		<result property="createDate" column="create_date"/>
		<result property="title" column="co_title"/>
		<result property="contents" column="contents"/>
		<result property="viewNum" column="view_num"/>
	<!-- 댓글 -->
		<result property="CID" column="c_seq"/>
		<result property="comment" column="comment_content"/>
		<result property="commentDate" column="comment_date"/>
	<!-- 몰 -->
		<result property="orderNum" column="order_num"/>
		
		<result property="cartNum" column="cart_num"/>
		<result property="reservDate" column="reserv_date"/>
		<result property="amount" column="amount"/>
		
		<result property="sbid" column="sbid"/>
		<result property="salesamount" column="salesamount"/>
		<result property="salesdate" column="salesdate"/>
		<result property="recipient" column="recipient"/>
		<result property="phonenum" column="phonenum"/>
		<result property="sellAddress" column="sell_ADDRESS"/>
	<!-- 북 -->
		<result property="genreNum" column="genreNum"/>
		<result property="largeGenre" column="largeGenre"/>
		<result property="smallGenre" column="smallGenre"/>
		
		<result property="bookNum" column="bookNum"/>
		<result property="bookName" column="bookName"/>
		<result property="writter" column="writter"/>
		<result property="publisher" column="publisher"/>
		<result property="publishingDate" column="publishingDate"/>
		<result property="price" column="price"/>
		
		<result property="imageName" column="imageName"/>
		<result property="imageRoute" column="imageRoute"/>
		
		
		<result property="evaluid" column="evaluid"/>
		<result property="evalulike" column="evalulike"/>
		
	</resultMap>
	
	<!-- MALL -->
     <!-- 장만호 영역  start-->
    <select  id="orderList" resultType="map" parameterType="hashMap">
    select salesdate, (price*sum(salesamount)) price,bookNum,bookName,writter, sum(salesamount) salesamount from sell
	where mem_id like #{userid} and salesdate BETWEEN  #{startDate}  and #{endDate} group by salesdate,bookName
    </select>
	<select  id="insertCheck" resultType="int" parameterType="hashMap">
		SELECT COUNT(*) AS count 
	 FROM  orders where mem_id like #{userid} AND bookNum like #{insertBook}
	</select>
	
	<select id="mallCartCount" resultType="map" parameterType="hashMap">
	SELECT COUNT(*) AS count 
	 FROM  CARTBASKET
	</select>
    <select id="mallCartList" resultMap="map" parameterType="hashMap">
    SELECT s.*,(select i.`imageRoute` from image i where i.`imageName` like s.imagename) As imageRoute
	  FROM shop s where s.mem_id like #{userid};
	  
    </select>
    <delete id="deleteCartList" parameterType="hashMap">
    	DELETE FROM orders where order_num in 
    	<if test="deleteNum != null and deleteNum != '' ">
    	(${deleteNum})
    	</if>
    	<if test="orderNum != null and orderNum != '' ">
    	(${orderNum})
    	</if>
    </delete>
       <update id="insertAmountUpdate" parameterType="hashMap">
        update orders set amount = amount+#{insertAmount} where mem_id = #{userid} and bookNum like #{insertBook}
		</update>
    <update id="cartAmountUpdate" parameterType="hashMap">
        update orders set amount = #{modifyVal} where order_num = #{modifyKey}
	</update>
	<insert id="insertcart" parameterType="hashmap">
	insert INTO orders (bookNum,reserv_date,amount,mem_id) VALUES(#{insertBook}, now(),#{insertAmount} ,#{userid});
	</insert>
	<insert id ="malladdSalesDetail" parameterType="hashMap"> 
	INSERT INTO sellbasket (salesamount, salesdate, recipient, sell_address, requirements, `bookNum`, mem_id, recipent_num) 
	VALUES(#{salesamount}, now(), #{recipient}, 
	<choose>
	<when test="recipentCheck=='true'">
		(select mem_address from member where mem_id like #{userid})
	</when>
	<when test="recipentCheck=='false'">
		(SELECT MAX(ADDR_ADDRESS) FROM address)
	</when>
	</choose> 
	, #{requirements}, ${bookNum}, #{userid}, #{recipientNum});
	</insert>

	 
    <!-- 장만호 영역  end -->
	
	<!-- 박상우 영역 start -->
	<insert id="imageADD" parameterType="hashMap">
    insert INTO image (imageRoute,imageName)
	VALUES(
	#{bookImg},
	#{title})
    </insert>
	<insert id="bookADD" parameterType="hashMap">
    insert INTO book (bookName, writter, publisher, publishingDate, price, imageName, genreNum,inventory) 
	VALUES(
	#{title},
	#{writ},
	#{publisher},
	#{publishingDate},
	#{price},
	#{title},
	#{genreNum},
	#{inven})
    </insert>
	<select id="genreInfo" resultMap="map" parameterType="hashMap">
    SELECT group_concat(g.genreNum) as genreNum,g.largeGenre, group_concat(g.smallGenre) as smallGenre
	FROM genre g group by g.largeGenre
    </select>
    <delete id="bookDelete" parameterType="hashMap">
    delete FROM book WHERE bookNum like #{bookID};
    </delete>
    <select id="chartDateBook" resultMap="map" parameterType="hashMap">
	select * from chartDateBook;
    </select>
    <select id="chartDateBooks" resultMap="map" parameterType="hashMap">
	select * from chartDateTable;
    </select>
	<insert id="addMember" parameterType="hashMap">
    INSERT INTO
    MEMBER(MEM_ID,MEM_PASS,MEM_NAME,MEM_NICKNAME,MEM_EMAIL,MEM_PHONE,MEM_SSN,MEM_ADDRESS,MEM_INTRODUCE)
    VALUES('${id}','${pass}','${name}','${id}','${email}','${phone}','${ssn}',(SELECT MAX(ADDR_ADDRESS) FROM address),'')
    </insert>
	<insert id="addAddress" parameterType="hashMap">
    INSERT INTO
    ADDRESS(ADDR_POSTCODEADDRESS,ADDR_ROADADDRESS,ADDR_JIBUNADDRESS,ADDR_DETAILADDRESS)
    VALUES('${postDetail}','${roadAddress}','${jibunAddress}','${detailAddress}')
    </insert>
    <select id="selectMemberById" resultMap="map" parameterType="hashMap">
    SELECT *
    FROM memsview
    WHERE
	${colum1} LIKE #{data1} AND ${colum2} LIKE #{data2}
    </select>
    <select id="selectAdminById" resultMap="map" parameterType="hashMap">
    SELECT *
    FROM ${type}
    WHERE
	${colum1} LIKE #{data1} AND ${colum2} LIKE #{data2}
    </select>
    <select id="selectById" resultMap="map" parameterType="hashMap">
    SELECT *
    FROM memsview
    WHERE
	${colum1} LIKE #{data1} AND ${colum2} LIKE #{data2}
    </select>
    <!-- board -->
    <select id="boardList" resultMap="map" parameterType="hashMap">
     select A2.* from(
        select @rank:=@rank+1 rank, A.* 
            from(select 
                                     
		board_id,
		DATE_FORMAT(create_date, '%Y-%m-%d') AS create_date,
		co_title,
		contents,
		view_num,
		MEM_ID
                        from board 
                        order by  board_id desc
              LIMIT 18446744073709551615 ) A,(SELECT @rank := 0) R) A2
                where rank between #{page.startRow} and #{page.endRow}
                
    </select>
    <select id="selectBoardCount" resultType="int" parameterType="hashMap">
    SELECT COUNT(*) FROM board
    </select>
    <select id="searchAll" resultMap="map" parameterType="hashMap">
     	select * 
     	from board 
     	where ${type} like '%${data}%'
     </select>
     <select id="searchContent" resultMap="map" parameterType="hashMap">
     	select * 
     	from board 
     	where ${type} like '%${data}%'
     </select>
     <select id="searchWriterTitle" resultMap="map" parameterType="hashMap">
     select *
     from board 
     where contents like '%${data}%' 
     	or co_title like '%${data}%'
     </select> 
     <select id="searchCount" resultType="int" parameterType="hashMap">
     	select count(*) from board where ${type} like '%${data}%'
     </select> 
     <select id="searchList" resultMap="map" parameterType="hashMap"> 
        select A2.* from(
        select @rank:=@rank+1 rank, A.* 
            from(select             
			board_id,
			DATE_FORMAT(create_date, '%Y-%m-%d') AS create_date,
			co_title,
			contents,
			view_num,
			mem_id
        from board 
 			where ${type} like '%${data}%'
                            order by board_id desc
                             LIMIT 18446744073709551615 
               ) A,(SELECT @rank := 0 
 			) R) A2
      
         where rank between #{page.startRow} and #{page.endRow}
         
     </select>
         <select id="articleDetail" resultMap="map" parameterType="hashMap">
     	select 
		board_id,
		DATE_FORMAT(create_date, '%Y-%m-%d') AS create_date,
		co_title,
		contents,
		view_num,
		mem_id
     	from board 
     	where board_id like #{x}
     </select>
     <select id="detailMoreCount" resultType="int"  parameterType="hashMap">
     	select count(*) 
     	from detailCommentList
     	where board_id = #{x}
     </select>
     <select id="detailCommentList" resultMap="map" parameterType="hashMap">
          select * from detailCommentList where board_id = #{x}
     </select>
     <select id="detailMore" resultMap="map" parameterType="hashMap">
	select 
		board_id,
		DATE_FORMAT(create_date, '%Y-%m-%d') AS create_date,
		co_title,
		contents,
		view_num,
		mem_id	
     	from board   	 
			  order by  board_id desc
              LIMIT 18446744073709551615 
     </select>
     <insert id="insertBoard" parameterType="hashMap">
     	insert into board(co_title,contents,create_date,mem_id)
     	values(#{title},#{contents},curdate(),#{memID})
     </insert>
     <insert id="insertComment" parameterType="hashMap">
     	insert into comments
     	(comment_content,comment_date,board_id,mem_id)
     	values
     	(#{comment},curdate(),#{x},#{id})
     </insert>
     <insert id="DetailCommentInsert" parameterType="hashMap">
     	insert into comments
     	(comment_content,comment_date,board_id,mem_id)
     	values
     	(#{comment},curdate(),#{x},#{id})
     </insert>
     
     <select id="commentCount" resultType="int" parameterType="hashMap">
     select count(*) from comments where board_id = #{x}
     </select>
     <update id="viewStack" parameterType="hashMap">
     UPDATE BOARD
   			SET view_num = IFNULL(view_num, 0) + 1
 			WHERE BOARD_ID = #{x}	
     </update>
     <delete id="deleteBoard" parameterType="hashMap">
     	DELETE 
     	FROM board 
     	WHERE board_id= #{x}
     </delete>
     <update id="updateBoard" parameterType="hashMap">
     	UPDATE board
     	SET contents = #{contents},
     		co_title = #{title}
     	WHERE board_id = #{x}
     </update>
      <select id="commentList" parameterType="hashMap" resultType="map">
     select 
		c_seq,
		DATE_FORMAT(comment_date, '%Y-%m-%d') AS comment_date,
		comment_content,
		board_id,
		mem_id
     	from comments
             where board_id = #{x}          
     	   order by  c_seq desc
              LIMIT 18446744073709551615 
	</select> 
	<delete id="deleteComment" parameterType="hashMap">
	DELETE 
     	FROM comments 
     	WHERE c_seq = #{x}
	</delete>
     <!-- book -->
     <select id="largeGenre" resultMap="map">
     	select DISTINCT largeGenre from genre
     </select>
     <select id="bookMainBook1" resultMap="map" parameterType="hashMap">
     	SELECT b.*,
        i.imageRoute
    	FROM (book b LEFT JOIN image i ON i.imageName LIKE b.imageName)
        LEFT JOIN genre g ON b.genreNum LIKE g.genreNum
  	 	WHERE largeGenre like #{1} order by publishingDate desc limit 0,6;
     </select>
     
     <select id="bookMainBook2" resultMap="map" parameterType="hashMap">
     	SELECT b.*,
        i.imageRoute
    	FROM (book b LEFT JOIN image i ON i.imageName LIKE b.imageName)
        LEFT JOIN genre g ON b.genreNum LIKE g.genreNum
  	 	WHERE largeGenre like #{2} order by publishingDate desc limit 0,6;
     </select>
     
     <select id="bookMainBook3" resultMap="map" parameterType="hashMap">
     	SELECT b.*,
        i.imageRoute
    	FROM (book b LEFT JOIN image i ON i.imageName LIKE b.imageName)
        LEFT JOIN genre g ON b.genreNum LIKE g.genreNum
  	 	WHERE largeGenre like #{3} order by publishingDate desc limit 0,6;
     </select>
     
     <select id="bookMainBook4" resultMap="map" parameterType="hashMap">
     	SELECT b.*,
        i.imageRoute
    	FROM (book b LEFT JOIN image i ON i.imageName LIKE b.imageName)
        LEFT JOIN genre g ON b.genreNum LIKE g.genreNum
  	 	WHERE largeGenre like #{4} order by publishingDate desc limit 0,6;
     </select>
     
     <select id="bookMainBook5" resultMap="map" parameterType="hashMap">
     	SELECT b.*,
        i.imageRoute
    	FROM (book b LEFT JOIN image i ON i.imageName LIKE b.imageName)
        LEFT JOIN genre g ON b.genreNum LIKE g.genreNum
  	 	WHERE largeGenre like #{5} order by publishingDate desc limit 0,6;
     </select>
     
     <select id="bookMainBook6" resultMap="map" parameterType="hashMap">
     	SELECT b.*,
        i.imageRoute
    	FROM (book b LEFT JOIN image i ON i.imageName LIKE b.imageName)
        LEFT JOIN genre g ON b.genreNum LIKE g.genreNum
  	 	WHERE largeGenre like #{6} order by publishingDate desc limit 0,6;
     </select>
     
     <select id="bookGenreSmallCount" resultType="int" parameterType="hashMap">
		select count(*) 
		  from book b join genre g
		 	   on g.genreNum 
		  LIKE b.genreNum
		 where g.smallGenre like #{genre}
	 </select>
	 <select id="bookGenreLargeCount" resultType="int" parameterType="hashMap">
		select count(*) from book b join genre g
		 on g.genreNum LIKE b.genreNum
		  where g.largeGenre like #{genre}
	 </select>
	 <select id="bookGenreLargeList" resultType="map" parameterType="hashMap">
		select b.inventory, b.bookNum, b.bookName, b.writter, b.publisher, i.imageRoute, b.price, b.publisher, b.publishingDate from (book b left join image i on i.imageName like b.imageName)
		left join genre g on b.genreNum like g.genreNum
		where g.largeGenre like #{genre}
		order by b.publishingDate DESC
	 </select>
	 <select id="bookNameLargeList" resultType="map" parameterType="hashMap">
		select b.inventory, b.bookNum, b.bookName, b.writter, b.publisher, i.imageRoute, b.price, b.publisher, b.publishingDate from (book b left join image i on i.imageName like b.imageName)
		left join genre g on b.genreNum like g.genreNum
		where g.largeGenre like #{genre}
		order by bookName asc
	 </select>
	 <select id="bookGenreSmallList" resultType="map" parameterType="hashMap">
		select b.inventory, b.bookNum, b.bookName, b.writter, b.publisher, i.imageRoute, b.price, b.publisher, b.publishingDate from (book b left join image i on i.imageName like b.imageName)
		left join genre g on b.genreNum like g.genreNum
		where g.smallGenre like #{genre}
		order by b.publishingDate DESC
	 </select>
	 <select id="bookNameSmallList" resultType="map" parameterType="hashMap">
		select b.inventory, b.bookNum, b.bookName, b.writter, b.publisher, i.imageRoute, b.price, b.publisher, b.publishingDate from (book b left join image i on i.imageName like b.imageName)
		left join genre g on b.genreNum like g.genreNum
		where g.smallGenre like #{genre}
		order by b.bookName asc
	 </select>
	 <select id="bookDetail" resultType="map" parameterType="hashMap">
		select * from bookdetail WHERE bookNum Like #{bookNum}
	 </select>
	 <select id="bookMonthRanking" resultType="map" parameterType="hashMap">
		select * from bookRanking
		where salesdate BETWEEN #{MonthStart} AND #{MonthEnd}
		order by count DESC LIMIT 6
	 </select>
	 
	 <select id="bookWeekRanking" resultType="map" parameterType="hashMap">
		select * from bookRanking
		where salesdate BETWEEN #{weekStart} AND #{weekEnd}
		order by count DESC LIMIT 6
	 </select>
	 
	 <select id="bookAllRanking" resultType="map" parameterType="hashMap">
		select * from bookRanking
 		order by count DESC LIMIT 6
	 </select>
	 
	 <select id="bookNewRanking" resultType="map" parameterType="hashMap">
			select b.bookNum, b.bookName, b.writter, i.imageRoute from book b join image i ON b.imageName like i.imageName
			order by publishingDate desc LIMIT 6;
	 </select>
	 
	 <select id="bookInven" resultType="map" parameterType="hashMap">
			select inventory from book where bookNum = #{bookNum}
	 </select>
</mapper>